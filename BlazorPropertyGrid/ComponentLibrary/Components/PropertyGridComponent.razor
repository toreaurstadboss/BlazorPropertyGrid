@inherits PropertyGridComponentBase
@using BlazorPropertyGridComponents.Components

<br />
  <EditForm Model="@DataContext">
<table class="table table-caption table-sm table-striped col-md-4 col-lg-3 col-sm-6">
@{
            var objectname = nameof(@DataContext);
}
<caption>Inspecting properties for object @ObjectTitle</caption>
    <thead class="thead-dark">
        <tr>
            <th scope="col">Property</th>
            <th scope="col">Value</th>
            <th scope="col"><button class="btn btn-info fas fa-pencil-alt" title="Click here to toggle edit mode" @onclick="(e) => toggleEditButton(e)" style="@CssStyleEditbutton"></button></th>
        </tr>
    </thead>
    <tbody>
      
        @foreach (KeyValuePair<string, PropertyInfoAtLevelNodeComponent> prop in Props)
        {
            @if (!prop.Value.IsClass)
            {
               @* <tr>
                    <td>@prop.Key</td>
                    <td>@prop.Value</td>
                </tr>*@
            }
            else
            {
                
                var currentNestedDiv = "currentDiv_" + prop.Key;
                var currentProp = prop.Value.PropertyValue;
                //must be a nested class property
                <tr>
                    <td colspan="2">
              
                        <button type="button" id="@prop.Key" class="btn btn-info fas fa-minus"  @onclick="(e) => toggleExpandButton(e,prop.Key)"  data-toggle="collapse" data-target="#@currentNestedDiv">
                        </button>
                        <div id="@currentNestedDiv" class="collapse show">
                           <PropertyRowComponent Depth="1" PropertyInfoAtLevel="@prop.Value" />
                        </div>
                        </td>
                        <td></td>
                        </tr>
            }
        }

    </tbody>
</table>

        </EditForm>
        <br />

@code {
}